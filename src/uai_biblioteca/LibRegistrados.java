package uai_biblioteca;

import java.awt.Image;
import java.awt.Toolkit;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Esta clase se utiliza para visualizar todos los deudores de libros
 *
 * @author @4lejandroRojas
 *
 */
public class LibRegistrados extends javax.swing.JFrame {

    Conexion cn;
    Icon Select, upd;

    /**
     * Inicializa la clase con todos los métodos y objetos necesarios
     *
     * @throws Exception
     */
    public LibRegistrados() throws Exception {
        initComponents();
        cn = new Conexion();
        mostrar("");
        Select = new ImageIcon(getClass().getResource("/img/selectFila.png"));
        upd = new ImageIcon(getClass().getResource("/img/update.png"));
        HabilitaControles(false);
        setLocationRelativeTo(null);
        setResizable(false);
        Limpiar();
        tFLibro.requestFocus();

    }

    /**
     * Recibe el estado que tendran loss controles involucrados con operaciones
     * de los libros
     *
     * @param estado recibe el estado que tendran los controles involucrados con
     * las opera
     */
    private void HabilitaControles(boolean estado) {
        jLBarCode.setEnabled(estado);
        jLTipo.setEnabled(estado);
        tFTitulo.setEnabled(estado);
        tFAutor.setEnabled(estado);
        tFSignatura.setEnabled(estado);
        jCBCivil.setEnabled(estado);
        jCBComp.setEnabled(estado);
        jCBTopo.setEnabled(estado);
        jCBConst.setEnabled(estado);
        jCBEditorial.setEnabled(estado);
        tFISBN.setEnabled(estado);
        jTextArea1.setEnabled(estado);
        tFVol.setEnabled(estado);
        tFTomo.setEnabled(estado);
        tFEdicion.setEnabled(estado);
        tfYear.setEnabled(estado);
        tFEjemplares.setEnabled(estado);
        jBActualizar.setEnabled(estado);
        jBReimprimir.setEnabled(estado);
    }

    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("img/libros.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLBarCode = new javax.swing.JLabel();
        jLTipo = new javax.swing.JLabel();
        tFTomo = new org.edisoncor.gui.textField.TextFieldRectBackground();
        tFTitulo = new org.edisoncor.gui.textField.TextFieldRectBackground();
        tFISBN = new org.edisoncor.gui.textField.TextFieldRectBackground();
        tFVol = new org.edisoncor.gui.textField.TextFieldRectBackground();
        jLabel11 = new javax.swing.JLabel();
        tFAutor = new org.edisoncor.gui.textField.TextFieldRectBackground();
        jLabel8 = new javax.swing.JLabel();
        tFEdicion = new org.edisoncor.gui.textField.TextFieldRectBackground();
        jLabel12 = new javax.swing.JLabel();
        tFEjemplares = new org.edisoncor.gui.textField.TextFieldRectBackground();
        jCBCivil = new javax.swing.JCheckBox();
        jCBComp = new javax.swing.JCheckBox();
        jCBTopo = new javax.swing.JCheckBox();
        jCBConst = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jCBEditorial = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        tfYear = new org.edisoncor.gui.textField.TextFieldRectBackground();
        tFSignatura = new org.edisoncor.gui.textField.TextFieldRectBackground();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        panelCurves1 = new org.edisoncor.gui.panel.PanelCurves();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        tFDataInput = new org.edisoncor.gui.textField.TextFieldRectBackground();
        tFLibro = new org.edisoncor.gui.textField.TextFieldRectBackground();
        jLabel10 = new javax.swing.JLabel();
        jBNoAdeudo1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jBReimprimir = new javax.swing.JButton();
        jBActualizar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMSalir = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Libros Registrados");
        setIconImage(getIconImage());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Datos del libro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("Tipo:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 64, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("Vol.:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, 40, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("Barcode:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 70, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setText("Titulo:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 64, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setText("Ejemp.");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, 60, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 51));
        jLabel7.setText("Tomo:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, -1, -1));

        jLBarCode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLBarCode.setText("Barcode");
        jPanel1.add(jLBarCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 120, -1));

        jLTipo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLTipo.setText("Tipo");
        jPanel1.add(jLTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 70, -1));

        tFTomo.setDescripcion("Num.");
        tFTomo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(tFTomo, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, -1, -1));

        tFTitulo.setDescripcion("Modifique titulo");
        tFTitulo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(tFTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 180, -1));

        tFISBN.setDescripcion("Signatura topográfica");
        tFISBN.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(tFISBN, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 180, -1));

        tFVol.setDescripcion("Num.");
        tFVol.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(tFVol, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 51));
        jLabel11.setText("Autor:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 64, -1));

        tFAutor.setDescripcion("Modifique autor");
        tFAutor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(tFAutor, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 180, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 51));
        jLabel8.setText("Edición:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, -1, -1));

        tFEdicion.setDescripcion("Num.");
        tFEdicion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(tFEdicion, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 51));
        jLabel12.setText("Año:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, -1, -1));

        tFEjemplares.setDescripcion("Num.");
        tFEjemplares.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(tFEjemplares, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, -1, -1));

        jCBCivil.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCBCivil.setText("1");
        jPanel1.add(jCBCivil, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, -1, -1));

        jCBComp.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCBComp.setText("2");
        jPanel1.add(jCBComp, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, -1, -1));

        jCBTopo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCBTopo.setText("3");
        jPanel1.add(jCBTopo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 40, -1));

        jCBConst.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCBConst.setText("4");
        jPanel1.add(jCBConst, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 51));
        jLabel13.setText("Signatura:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 80, -1));

        jCBEditorial.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel1.add(jCBEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 180, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 0, 51));
        jLabel14.setText("Área:");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 50, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 0, 51));
        jLabel15.setText("Editorial:");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 70, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 0, 51));
        jLabel16.setText("Observ.:");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 70, -1));

        tfYear.setDescripcion("Num.");
        tfYear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(tfYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, -1, -1));

        tFSignatura.setDescripcion("Signatura topográfica");
        tFSignatura.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(tFSignatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 180, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 0, 51));
        jLabel17.setText("ISBN:");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 70, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 340, 110));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logos/Libros Registrados.png"))); // NOI18N
        panelCurves1.add(jLabel1, java.awt.BorderLayout.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Control de Búsqueda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 51));
        jLabel9.setText("<html>Por:<br>Codigo de barras:</html>");

        tFDataInput.setDescripcion("Titulo, Autor, Tipo, ISBN");
        tFDataInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tFDataInputKeyReleased(evt);
            }
        });

        tFLibro.setDescripcion("Barcode del Libro");
        tFLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tFLibroActionPerformed(evt);
            }
        });
        tFLibro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tFLibroKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 51));
        jLabel10.setText("<html>Por:<br>Titulo,Autor,Tipo,ISBN:</html>");

        jBNoAdeudo1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBNoAdeudo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buscar.png"))); // NOI18N
        jBNoAdeudo1.setText("Buscar Libro");
        jBNoAdeudo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNoAdeudo1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(tFDataInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jBNoAdeudo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tFLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(tFDataInput, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tFLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBNoAdeudo1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Acciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jBReimprimir.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jBReimprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/asistencias.png"))); // NOI18N
        jBReimprimir.setText("Reimprimir Etiquetas");
        jBReimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBReimprimirActionPerformed(evt);
            }
        });

        jBActualizar.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jBActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/actualizarDos.png"))); // NOI18N
        jBActualizar.setText("Actualizar Datos");
        jBActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBReimprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jBReimprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cerrarsecion.png"))); // NOI18N
        jMSalir.setText("Salir");
        jMSalir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMSalirMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMSalir);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(panelCurves1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panelCurves1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        Limpiar();
        int fila = jTable1.getSelectedRow();
        if (fila >= 0) {
            SeleccionaLibro(String.valueOf(jTable1.getValueAt(fila, 0)));
        }
        HabilitaControles(true);
    }//GEN-LAST:event_jTable1MousePressed

    private void jBActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBActualizarActionPerformed
        Actualizar();
    }//GEN-LAST:event_jBActualizarActionPerformed

    private void tFDataInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tFDataInputKeyReleased
        String sql = "SELECT idLibro,Tipo, Titulo,Autor,Stock FROM Libro WHERE Tipo LIKE '%" + tFDataInput.getText() + "%' || Titulo LIKE '%" + tFDataInput.getText() + "%' || Autor LIKE '%" + tFDataInput.getText() + "%';";
        mostrar(sql);
    }//GEN-LAST:event_tFDataInputKeyReleased

    private void jBReimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBReimprimirActionPerformed
        Reimprimir(jLBarCode.getText());
    }//GEN-LAST:event_jBReimprimirActionPerformed

    private void jMSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMSalirMouseClicked
        this.setVisible(false);
        cn.desconectar();
    }//GEN-LAST:event_jMSalirMouseClicked

    private void jBNoAdeudo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNoAdeudo1ActionPerformed
        if (tFLibro.getText().length() != 0) {
            BuscarLibro();
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un código de barras del libro", "Error al procesar", JOptionPane.ERROR_MESSAGE);
            Limpiar();
        }
    }//GEN-LAST:event_jBNoAdeudo1ActionPerformed

    private void tFLibroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tFLibroKeyReleased
        String sql = "SELECT idLibro, Tipo,Titulo,Autor, Stock FROM Libro WHERE idLibro like '" + tFLibro.getText() + "%';";
        mostrar(sql);
    }//GEN-LAST:event_tFLibroKeyReleased

    private void tFLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tFLibroActionPerformed
        if (tFLibro.getText().length() != 0) {
            BuscarLibro();
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un código de barras del libro", "Error al procesar", JOptionPane.ERROR_MESSAGE);
            Limpiar();

        }
    }//GEN-LAST:event_tFLibroActionPerformed

    /**
     * Reimprime las etiquetas del libro con el id especificdo
     *
     * @param ID Recibe el id del libro seleccionado
     */
    @SuppressWarnings("unchecked")
    private void Reimprimir(String ID) {
        try {
            String ruta = "src/Reportes/LibrosporID.jasper";
            Map parametros = new HashMap();
            parametros.put("idLibro", ID);

            JasperReport jr = (JasperReport) JRLoader.loadObjectFromFile(ruta);
            JasperPrint jp = JasperFillManager.fillReport(jr, parametros, cn.getConnection());
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);
            jv.setTitle("Reimpresión de etiquetas. IdLibro =" + ID);
        } catch (Exception ex) {
            System.out.println("Error al generar etiquetas: " + ex.getMessage());
        }
    }

    /**
     * Actualiza el Stock de libros, le resta 1 al libro cuyo barcode reciba
     *
     * @param idLibro Recibe el barcode del libro
     */
    public void ActualizaStock(String idLibro) {
        String sqlSelect = "SELECT Stock FROM Libro WHERE idLibro='" + idLibro + "';";
        int Stock = 0;
        try {
            Statement st = cn.getConnection().createStatement();
            ResultSet rs = st.executeQuery(sqlSelect);

            while (rs.next()) {
                Stock = rs.getInt(1);
            }
            Stock = Stock + 1;

        } catch (SQLException e) {
            System.out.println("Error al leer el Stock del libro: " + e.getMessage());
        }

        String sqlUpd = "UPDATE Libro SET Stock=? WHERE idLibro='" + idLibro + "';";

        try {
            PreparedStatement pst = cn.getConnection().prepareStatement(sqlUpd);
            pst.setInt(1, Stock);
            pst.executeUpdate();
            pst.close();

        } catch (SQLException ex) {
            System.out.println("Error al actualizar el Stock:" + ex.getMessage());
        }
    }

    private void Actualizar() {
        try {
            PreparedStatement ps = cn.getConnection().prepareStatement("UPDATE libro "
                    + "SET Titulo=?,Autor=?,Volumen=?,Tomo=?,Edicion=?,Año=?,Area=?,"
                    + "SigTopografica=?,idEditorial=?,ISBN=?,Stock=?,Observaciones=? WHERE idLibro=" + this.jLBarCode.getText() + ";");

            ps.setString(1, tFTitulo.getText());
            ps.setString(2, tFAutor.getText());
            ps.setInt(3, Integer.parseInt(tFVol.getText()));
            ps.setInt(4, Integer.parseInt(tFTomo.getText()));
            ps.setInt(5, Integer.parseInt(tFEdicion.getText()));
            ps.setString(6, tfYear.getText());
            ps.setString(7, Areas());
            ps.setString(8, tFSignatura.getText());
            ps.setInt(9, DevuelveIDEditorial());
            ps.setString(10, tFISBN.getText());
            ps.setInt(11, Integer.parseInt(tFEjemplares.getText()));
            ps.setString(12, jTextArea1.getText());

            ps.executeUpdate();
            ps.close();

            JOptionPane.showMessageDialog(this, "Se ha actualizado los datos", "Actualizado", JOptionPane.WARNING_MESSAGE, this.upd);
            mostrar("");
            Limpiar();
            HabilitaControles(false);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(this, "Error al Actualizar", "Error al procesar", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Captura las areas seleccionadas
     *
     * @return Areas, concatena en un String las areas seleccionadas
     */
    private String Areas() {
        String Areas = "";
        if (jCBCivil.isSelected()) {
            Areas = "1";
        }
        if (jCBComp.isSelected()) {
            Areas = Areas + "2";
        }
        if (jCBTopo.isSelected()) {
            Areas = Areas + "3";
        }
        if (jCBConst.isSelected()) {
            Areas = Areas + "4";
        }
        return Areas;
    }

    /**
     * Recorrido para detectar el ID de la editorial
     *
     * @return idEditorial Regresa el número encontrada hasta '.'
     */
    private int DevuelveIDEditorial() {
        String AuxiliarId = "";
        int idEditorial = 0;
        for (int i = 0; i < jCBEditorial.getSelectedItem().toString().length(); i++) {
            char c = jCBEditorial.getSelectedItem().toString().charAt(i);
            if (c != '.') {
                AuxiliarId = AuxiliarId + c;
            } else {
                break;
            }
        }
        idEditorial = Integer.parseInt(AuxiliarId);
        return idEditorial;
    }

    /**
     * Limpia los campos de texto
     */
    private void Limpiar() {
        jLBarCode.setText("BARCODE");
        tFTitulo.setText("");
        tFAutor.setText("");
        tFSignatura.setText("");
        tFISBN.setText("");
        tFVol.setText("");
        tFTomo.setText("");
        tFEdicion.setText("");
        tfYear.setText("");
        tFEjemplares.setText("");
        jCBEditorial.removeAllItems();
        jLTipo.setText("TIPO");
        tFLibro.setText("");
        jTextArea1.setText("");
        tFDataInput.setText("");
        jCBCivil.setSelected(false);
        jCBComp.setSelected(false);
        jCBTopo.setSelected(false);
        jCBConst.setSelected(false);

        tFLibro.requestFocus();
    }

    /**
     * Muestra por defecto todos los libros adeudados y sus respectivos deudores
     *
     * @param sql Recibe la consulta que mostrará en la jTable
     */
    private void mostrar(String sql) {
        DefaultTableModel Modelo = new DefaultTableModel();
        Modelo.addColumn("BARCODE");
        Modelo.addColumn("TIPO");
        Modelo.addColumn("TITULO");
        Modelo.addColumn("AUTOR");
        Modelo.addColumn("STOCK");
        jTable1.setModel(Modelo);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(10);

        if (sql.equals("")) {
            sql = "SELECT idLibro,Tipo,Titulo,Autor,Stock FROM Libro;";
        }

        String[] datos = new String[5];
        try {
            Statement st = cn.getConnection().createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);
                Modelo.addRow(datos);
            }

        } catch (SQLException ex) {
            System.out.println("Error al hacer consulta: " + ex.getMessage());
        }
    }

    private void SeleccionaLibro(String idLibro) {
        String sql = "SELECT * FROM Libro WHERE idLibro='" + idLibro + "';";

        try {
            Statement st = cn.getConnection().createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                jLBarCode.setText(String.valueOf(rs.getInt(1)));
                jLTipo.setText(rs.getString(2));
                tFTitulo.setText(rs.getString(3));
                tFAutor.setText(rs.getString(4));
                tFVol.setText(String.valueOf(rs.getInt(5)));
                tFTomo.setText(String.valueOf(rs.getInt(6)));
                tFEdicion.setText(String.valueOf(rs.getInt(7)));
                tfYear.setText(rs.getString(8));
                LeerAreas(rs.getString(9));
                tFSignatura.setText(rs.getString(10));
                LlenarEditoriales(rs.getInt(11));
                tFISBN.setText(rs.getString(12));
                tFEjemplares.setText(String.valueOf(rs.getInt(13)));
                jTextArea1.setText(rs.getString(14));

            }
            rs.close();
            st.close();

        } catch (SQLException ex) {
            System.out.println("Error al hacer consulta: " + ex.getMessage());
        }
    }

    /**
     * Busca el libro desde el campo de texto ayudado por el lector de codigo de
     * barras o el teclado a diferencia de la busqueda like, en este método se
     * busca el codigo de barras correcto, es decir completo Utilizado en el
     * boton de buscar libro y al dar enter en el mismo TextField de codigo de
     * barras del libro
     */
    private void BuscarLibro() {
        String sql = "SELECT idLibro, Tipo,Titulo,Autor, Stock FROM Libro WHERE idLibro='" + tFLibro.getText() + "';";
        mostrar(sql);
    }

    /**
     * Lee una cadena de texto buscando las areas de interes y selecciona los
     * jCheckBox correspondientes
     *
     * @param Areas 1- Civil, 2- Computacion, 3-Topografo, 4- Constructor
     */
    private void LeerAreas(String Areas) {
        char c;
        for (int i = 0; i < Areas.length(); i++) {
            c = Areas.charAt(i);
            if (c == '1') {
                jCBCivil.setSelected(true);
            }
            if (c == '2') {
                jCBComp.setSelected(true);
            }
            if (c == '3') {
                jCBTopo.setSelected(true);
            }
            if (c == '4') {
                jCBConst.setSelected(true);
            }
        }
    }

    /**
     * Consulta las editoriales y rellena el jComboBox correspondiente
     */
    private void LlenarEditoriales(int idEditorial) {
        String sql = "SELECT IdEditorial,NombreEditorial FROM Editorial";
        try {
            Statement st = cn.getConnection().createStatement();
            ResultSet rs = st.executeQuery(sql);
            int cont = 0, aux = 0;
            while (rs.next()) {
                jCBEditorial.addItem(rs.getInt(1) + ". " + rs.getString(2));
                cont++;
                if (rs.getInt(1) == idEditorial) {
                    aux = cont - 1;
                }
            }
            jCBEditorial.setSelectedIndex(aux);
            rs.close();
            st.close();
            //cn.desconectar();
        } catch (Exception e) {
            System.out.println("Error al llenar editoriales " + e.getMessage());

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibRegistrados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibRegistrados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibRegistrados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibRegistrados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new LibRegistrados().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(LibRegistrados.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBActualizar;
    private javax.swing.JButton jBNoAdeudo1;
    private javax.swing.JButton jBReimprimir;
    private javax.swing.JCheckBox jCBCivil;
    private javax.swing.JCheckBox jCBComp;
    private javax.swing.JCheckBox jCBConst;
    private javax.swing.JComboBox<String> jCBEditorial;
    private javax.swing.JCheckBox jCBTopo;
    private javax.swing.JLabel jLBarCode;
    private javax.swing.JLabel jLTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMSalir;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private org.edisoncor.gui.panel.PanelCurves panelCurves1;
    private org.edisoncor.gui.textField.TextFieldRectBackground tFAutor;
    private org.edisoncor.gui.textField.TextFieldRectBackground tFDataInput;
    private org.edisoncor.gui.textField.TextFieldRectBackground tFEdicion;
    private org.edisoncor.gui.textField.TextFieldRectBackground tFEjemplares;
    private org.edisoncor.gui.textField.TextFieldRectBackground tFISBN;
    private org.edisoncor.gui.textField.TextFieldRectBackground tFLibro;
    private org.edisoncor.gui.textField.TextFieldRectBackground tFSignatura;
    private org.edisoncor.gui.textField.TextFieldRectBackground tFTitulo;
    private org.edisoncor.gui.textField.TextFieldRectBackground tFTomo;
    private org.edisoncor.gui.textField.TextFieldRectBackground tFVol;
    private org.edisoncor.gui.textField.TextFieldRectBackground tfYear;
    // End of variables declaration//GEN-END:variables
}

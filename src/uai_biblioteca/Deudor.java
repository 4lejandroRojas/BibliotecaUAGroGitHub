package uai_biblioteca;

import java.awt.Image;
import java.awt.Toolkit;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import net.sf.jasperreports.engine.JasperExportManager;

/**
 * Esta clase se utiliza para visualizar todos los deudores de libros
 *
 * @author @4lejandroRojas
 *
 */
public class Deudor extends javax.swing.JFrame {

    Conexion cn;
    String idPrestamos = "", idLibro = "";
    Icon Select, upd;
    String Fecha="";

    /**
     * Inicializa la clase con todos los métodos y objetos necesarios
     *
     * @throws Exception
     */
    public Deudor() throws Exception {
        initComponents();
        cn = new Conexion();
        mostrar("");
        Select = new ImageIcon(getClass().getResource("/img/selectFila.png"));
        upd = new ImageIcon(getClass().getResource("/img/update.png"));
        jBDevolver.setEnabled(false);
        jBReimprimir.setEnabled(false);
        jBCambiar.setEnabled(false);
        jTFecha.setEnabled(false);
        setLocationRelativeTo(null);
        setResizable(false);
        tFLibro.requestFocus();
        jRBTodos.setSelected(true);
        Calendar c = new GregorianCalendar();        
        Fecha = Integer.toString(c.get(Calendar.DATE))+"/"+ Integer.toString(c.get(Calendar.MONTH)+1)+"/"+Integer.toString(c.get(Calendar.YEAR));

    }

    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("img/libros.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLFechaS = new javax.swing.JLabel();
        jLAutor = new javax.swing.JLabel();
        jLTitulo = new javax.swing.JLabel();
        jLMatricula = new javax.swing.JLabel();
        jLPE = new javax.swing.JLabel();
        jLNombre = new javax.swing.JLabel();
        jBCambiar = new javax.swing.JButton();
        jTFecha = new javax.swing.JTextField();
        jBDevolver = new javax.swing.JButton();
        jBReimprimir = new javax.swing.JButton();
        panelCurves1 = new org.edisoncor.gui.panel.PanelCurves();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        tFMatricula = new org.edisoncor.gui.textField.TextFieldRectBackground();
        jBNoAdeudo = new javax.swing.JButton();
        tFLibro = new org.edisoncor.gui.textField.TextFieldRectBackground();
        jLabel10 = new javax.swing.JLabel();
        jBNoAdeudo1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jRBVigentes = new javax.swing.JRadioButton();
        jRBAtrasados = new javax.swing.JRadioButton();
        jRBTodos = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMSalir = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Deudores de Libros");
        setIconImage(getIconImage());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Datos de Préstamo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("PE:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("Matricula:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setText("Titulo:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setText("Autor");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 51));
        jLabel7.setText("Fecha Salida:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 51));
        jLabel8.setText("Fecha Devolución:");

        jLFechaS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLFechaS.setText("Fecha Salida:");

        jLAutor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLAutor.setText("Autor");

        jLTitulo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLTitulo.setText("Titulo:");

        jLMatricula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLMatricula.setText("Matricula:");

        jLPE.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLPE.setText("PE:");

        jLNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLNombre.setText("Nombre:");

        jBCambiar.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jBCambiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/actualizarDos.png"))); // NOI18N
        jBCambiar.setText("<HTML>Modificar Fecha <br> De Entrega</HTML>");
        jBCambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCambiarActionPerformed(evt);
            }
        });

        jTFecha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFechaActionPerformed(evt);
            }
        });

        jBDevolver.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jBDevolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bookPrestamo.png"))); // NOI18N
        jBDevolver.setText("Devolver");
        jBDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDevolverActionPerformed(evt);
            }
        });

        jBReimprimir.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jBReimprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/asistencias.png"))); // NOI18N
        jBReimprimir.setText("Reimprimir");
        jBReimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBReimprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jLMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(jLNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(jLPE, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(jLTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jLAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLFechaS, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jBDevolver, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jBReimprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jBCambiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLMatricula)
                    .addComponent(jLabel4))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLNombre)
                    .addComponent(jLabel2))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLPE)
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLAutor)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLFechaS)
                    .addComponent(jLabel7))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBDevolver, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBReimprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBCambiar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logos/Deudores.png"))); // NOI18N
        panelCurves1.add(jLabel1, java.awt.BorderLayout.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Control de Deudores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 51));
        jLabel9.setText("Codigo de barras:");

        tFMatricula.setDescripcion("Matricula");
        tFMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tFMatriculaActionPerformed(evt);
            }
        });
        tFMatricula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tFMatriculaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tFMatriculaKeyTyped(evt);
            }
        });

        jBNoAdeudo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBNoAdeudo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/asistencias.png"))); // NOI18N
        jBNoAdeudo.setText("<html>Generar Constancia<br>De No Adeudo</html>");
        jBNoAdeudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNoAdeudoActionPerformed(evt);
            }
        });

        tFLibro.setDescripcion("Barcode del Libro");
        tFLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tFLibroActionPerformed(evt);
            }
        });
        tFLibro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tFLibroKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 51));
        jLabel10.setText("Matricula:");

        jBNoAdeudo1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBNoAdeudo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buscar.png"))); // NOI18N
        jBNoAdeudo1.setText("Buscar Libro");
        jBNoAdeudo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNoAdeudo1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jBNoAdeudo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBNoAdeudo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tFMatricula, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tFLibro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addGap(1, 1, 1)
                .addComponent(tFMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBNoAdeudo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(1, 1, 1)
                .addComponent(tFLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBNoAdeudo1)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Control de Adeudos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        buttonGroup.add(jRBVigentes);
        jRBVigentes.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRBVigentes.setText("Prestamos Vigentes");
        jRBVigentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBVigentesActionPerformed(evt);
            }
        });

        buttonGroup.add(jRBAtrasados);
        jRBAtrasados.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRBAtrasados.setText("<html>Prestamos Atrasados <br> o Vencidos");
        jRBAtrasados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBAtrasadosActionPerformed(evt);
            }
        });

        buttonGroup.add(jRBTodos);
        jRBTodos.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRBTodos.setText("Todos Los Prestamos");
        jRBTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRBAtrasados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRBVigentes)
                    .addComponent(jRBTodos))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jRBVigentes)
                .addGap(27, 27, 27)
                .addComponent(jRBAtrasados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jRBTodos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cerrarsecion.png"))); // NOI18N
        jMSalir.setText("Salir");
        jMSalir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMSalirMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMSalir);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(panelCurves1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panelCurves1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        int fila = jTable1.getSelectedRow();
        if (fila >= 0) {
            idPrestamos = jTable1.getValueAt(fila, 0).toString();
            this.jLMatricula.setText(jTable1.getValueAt(fila, 1).toString());
            this.jLNombre.setText(jTable1.getValueAt(fila, 2).toString());
            this.jLPE.setText(jTable1.getValueAt(fila, 3).toString());
            this.jTFecha.setText(jTable1.getValueAt(fila, 8).toString());
            this.jLTitulo.setText(jTable1.getValueAt(fila, 5).toString());
            this.jLAutor.setText(jTable1.getValueAt(fila, 6).toString());
            this.jLFechaS.setText(jTable1.getValueAt(fila, 7).toString());
            this.idLibro = jTable1.getValueAt(fila, 9).toString();
        }
        jBDevolver.setEnabled(true);
        jBReimprimir.setEnabled(true);
        jBCambiar.setEnabled(true);
        jTFecha.setEnabled(true);
    }//GEN-LAST:event_jTable1MousePressed

    private void jBCambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCambiarActionPerformed
        CambiarFecha();
    }//GEN-LAST:event_jBCambiarActionPerformed

    private void jBDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDevolverActionPerformed
        DevolverLibro(idPrestamos);
    }//GEN-LAST:event_jBDevolverActionPerformed

    private void tFMatriculaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tFMatriculaKeyReleased
        String sql = "SELECT "
                + "Prestamos.idPrestamos, Personas.Matricula,Personas.Nombres,Personas.Apellidos,"
                + "Personas.Carrera,DetallePersona.Telefono,Libro.Titulo,Libro.Autor,Prestamos.FechaS,Prestamos.FechaD,Prestamos.idLibro"
                + " FROM "
                + "Prestamos INNER JOIN Personas ON Prestamos.idUsuario=Personas.idPersonas INNER JOIN DetallePersona ON DetallePersona.idPersonas=Personas.idPersonas "
                + "INNER JOIN Libro ON Prestamos.idLibro=Libro.idLibro"
                + " WHERE "
                + "Prestamos.estado='Prestado' && Personas.Matricula like '" + tFMatricula.getText() + "%';";
        mostrar(sql);
    }//GEN-LAST:event_tFMatriculaKeyReleased

    private void jBReimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBReimprimirActionPerformed
        Reimprimir(this.idPrestamos);
    }//GEN-LAST:event_jBReimprimirActionPerformed

    private void jBNoAdeudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNoAdeudoActionPerformed
        ConstanciaNoAdeudo();
    }//GEN-LAST:event_jBNoAdeudoActionPerformed

    private void tFMatriculaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tFMatriculaKeyTyped
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tFMatriculaKeyTyped

    private void tFMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tFMatriculaActionPerformed
        ConstanciaNoAdeudo();
    }//GEN-LAST:event_tFMatriculaActionPerformed

    private void jMSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMSalirMouseClicked
        this.setVisible(false);
        cn.desconectar();
    }//GEN-LAST:event_jMSalirMouseClicked

    private void jTFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFechaActionPerformed
        CambiarFecha();
    }//GEN-LAST:event_jTFechaActionPerformed

    private void jBNoAdeudo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNoAdeudo1ActionPerformed
        if (tFLibro.getText().length() != 0) {
            BuscarLibro(tFLibro.getText());
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un código de barras del libro", "Error al procesar", JOptionPane.ERROR_MESSAGE);
            Limpiar();
        }
    }//GEN-LAST:event_jBNoAdeudo1ActionPerformed

    private void tFLibroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tFLibroKeyReleased
        String sql = "SELECT "
                + "Prestamos.idPrestamos, Personas.Matricula,Personas.Nombres,Personas.Apellidos,"
                + "Personas.Carrera,DetallePersona.Telefono,Libro.Titulo,Libro.Autor,Prestamos.FechaS,Prestamos.FechaD,Libro.idLibro"
                + " FROM "
                + "Prestamos INNER JOIN Personas ON Prestamos.idUsuario=Personas.idPersonas INNER JOIN DetallePersona ON DetallePersona.idPersonas=Personas.idPersonas "
                + "INNER JOIN Libro ON Prestamos.idLibro=Libro.idLibro"
                + " WHERE "
                + "Prestamos.estado='Prestado' && Prestamos.idLibro like '" + tFLibro.getText() + "%';";
        mostrar(sql);
    }//GEN-LAST:event_tFLibroKeyReleased

    private void tFLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tFLibroActionPerformed
        if (tFLibro.getText().length() != 0) {
            BuscarLibro(tFLibro.getText());
            
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un código de barras del libro", "Error al procesar", JOptionPane.ERROR_MESSAGE);
            Limpiar();
              
        }
    }//GEN-LAST:event_tFLibroActionPerformed

    private void jRBVigentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBVigentesActionPerformed
        String sql = "SELECT "
                + "Prestamos.idPrestamos, Personas.Matricula,Personas.Nombres,Personas.Apellidos,"
                + "Personas.Carrera,DetallePersona.Telefono,Libro.Titulo,Libro.Autor,Prestamos.FechaS,Prestamos.FechaD,Libro.idLibro"
                + " FROM "
                + "Prestamos INNER JOIN Personas ON Prestamos.idUsuario=Personas.idPersonas INNER JOIN DetallePersona ON DetallePersona.idPersonas=Personas.idPersonas "
                + "INNER JOIN Libro ON Prestamos.idLibro=Libro.idLibro"
                + " WHERE "
                + "Prestamos.estado='Prestado' && Prestamos.FechaD >='"+Fecha+"' ORDER BY Prestamos.FechaD;";
        mostrar(sql);
    }//GEN-LAST:event_jRBVigentesActionPerformed

    private void jRBAtrasadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBAtrasadosActionPerformed
        String sql = "SELECT "
                + "Prestamos.idPrestamos, Personas.Matricula,Personas.Nombres,Personas.Apellidos,"
                + "Personas.Carrera,DetallePersona.Telefono,Libro.Titulo,Libro.Autor,Prestamos.FechaS,Prestamos.FechaD,Libro.idLibro"
                + " FROM "
                + "Prestamos INNER JOIN Personas ON Prestamos.idUsuario=Personas.idPersonas INNER JOIN DetallePersona ON DetallePersona.idPersonas=Personas.idPersonas "
                + "INNER JOIN Libro ON Prestamos.idLibro=Libro.idLibro"
                + " WHERE "
                + "Prestamos.estado='Prestado' && Prestamos.FechaD <'"+Fecha+"' ORDER BY Prestamos.FechaD;";
        mostrar(sql);
    }//GEN-LAST:event_jRBAtrasadosActionPerformed

    private void jRBTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBTodosActionPerformed
        mostrar("");
    }//GEN-LAST:event_jRBTodosActionPerformed

    
    private void DevolverLibro(String Prestamo){
        try {
            PreparedStatement pst = cn.getConnection().prepareStatement("UPDATE prestamos "
                    + "SET estado=? WHERE idPrestamos=" + Prestamo + ";");
            pst.setString(1, "Devuelto");
            pst.executeUpdate();
            pst.close();

            JOptionPane.showMessageDialog(this, "Se ha devuelto el libro ", "Actualizado ", JOptionPane.WARNING_MESSAGE, this.upd);
            mostrar("");
            reportePDF(idPrestamos);
            EmailReporte(false,jLNombre.getText(),jLMatricula.getText());
            ActualizaStock(idLibro);

        } catch (SQLException ex) {
            System.out.println("Error al devolver" + ex.getMessage());
            JOptionPane.showMessageDialog(this, "Error al Actualizar");
        }

        Limpiar();
    }
    /**
     * Cambia la fecha de entrega de libro, lo identifica de acuerdo a la
     * variable global de libro que se definio al inicio
     */
    private void CambiarFecha() {
        if (jTFecha.getText().length() != 0) {
            try {
                PreparedStatement pst = cn.getConnection().prepareStatement("UPDATE prestamos "
                        + "SET FechaD=? WHERE idPrestamos=" + this.idPrestamos + ";");
                pst.setString(1, jTFecha.getText());
                pst.executeUpdate();
                pst.close();

                JOptionPane.showMessageDialog(this, "Se ha cambiado la fecha ", "Actualizado", JOptionPane.WARNING_MESSAGE, this.upd);
                mostrar("");
                reportePDF(this.idPrestamos);
                EmailReporte(true,jLNombre.getText(), jLMatricula.getText());
                Limpiar();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
                JOptionPane.showMessageDialog(this, "Error al Actualizar", "Error al procesar", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar una fecha", "Error al procesar", JOptionPane.ERROR_MESSAGE);
        }
    }

    //Imprime reporte de no adeudo
    @SuppressWarnings("unchecked")
    void ReporteNoAdeudo(String ID) {
        String mes[] = {"ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE"};
        Calendar c2 = new GregorianCalendar();
        System.out.println("" + ID);

        try {
            String ruta = "src/reportes/NoAdeudo.jasper";
            Map parametros = new HashMap();
            parametros.put("matricul", ID);
            parametros.put("adm", String.valueOf(loginAdm.idResponsable));
            parametros.put("dia", String.valueOf(c2.get(Calendar.DAY_OF_MONTH)));
            parametros.put("mes", mes[c2.get(Calendar.MONTH)]);
            parametros.put("year", String.valueOf(c2.get(Calendar.YEAR)));

            JasperReport jr = (JasperReport) JRLoader.loadObjectFromFile(ruta);
            JasperPrint jp = JasperFillManager.fillReport(jr, parametros, cn.getConnection());
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);
            jv.setTitle("Constancia de no Adeudo");

        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }

    /**
     * Reimprime el reporte de prestamo con el idSeleccionado
     * @param ID Recibe el id del prestamo 
     */
    private void Reimprimir(String ID) {
        try {
            String ruta = "src/Reportes/PrestamoporID.jasper";
            Map parametros = new HashMap();
            parametros.put("idPrestamos", ID);

            JasperReport jr = (JasperReport) JRLoader.loadObjectFromFile(ruta);
            JasperPrint jp = JasperFillManager.fillReport(jr, parametros, cn.getConnection());
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);
            jv.setTitle("Reimpresión de Prestamo");
        } catch (Exception ex) {
            Logger.getLogger(Deudor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Genera el archivo PDF del prestamo para poder enviarlo
     */
    @SuppressWarnings("unchecked")
    void reportePDF(String ID) {
        try {
            String ruta = "src/Reportes/PrestamoporID.jasper";
            Map parametros = new HashMap();
            parametros.put("idPrestamos", ID);

            JasperReport jr = (JasperReport) JRLoader.loadObjectFromFile(ruta);
            JasperPrint jp = JasperFillManager.fillReport(jr, parametros, cn.getConnection());

            JasperExportManager.exportReportToPdfFile(jp, "C:/img/Prestamo.pdf");

        } catch (Exception ex) {
            System.out.println("Error al generar PDF" + ex.getMessage());
        }
    }

    /**
     * Enviar formato de prestamo por email, verifica con el parametro si lo que
     * enviará es un cambio de fecha o si es devolución de libro
     *
     * @param flag Verifica el tipo de operación que se realizará: Cambio de
     * fecha o Devolución
     */
    private void EmailReporte(boolean flag,String Nombre, String Matricula) {
        ConectorCorreos call = new ConectorCorreos();

        if (flag) {//Cambio de fecha
            call.mail("La fecha de entrega se ha modificado para:\n" + jLNombre.getText() + "\nMatricula: " + jLMatricula.getText() + "\nNUEVA FECHA DE ENTREGA:" + jTFecha.getText(), "Fecha de entrega modificada");
        } else {//Devuelto
            call.mail("El libro prestado a:\n" + Nombre + "\nMatricula: " + Matricula + "\nHA SIDO ENTREGADO", "Libro entregado");
        }
    }

    // Verifica deudor y genera constancia de no adeudo
    private void ConstanciaNoAdeudo() {
        String sql = "SELECT Matricula FROM Prestamos INER JOIN Personas on idPersonas = idUsuario WHERE estado='Prestado' && matricula = '" + tFMatricula.getText() + "';";
        int Cont = 0;
        try {
            Statement st = cn.getConnection().createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                Cont = 1;
            }

        } catch (SQLException ex) {
            System.out.println("Error al leer deudores " + ex.getMessage());
        }
        if (tFMatricula.getText().length() != 0 && Cont != 1) {
            ReporteNoAdeudo(tFMatricula.getText());
        } else {
            JOptionPane.showMessageDialog(this, "El campo de matricula no puede estar vacio\nEl alumno no debe tener adeudos con la biblioteca", "Error al procesar", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * Actualiza el Stock de libros, le resta 1 al libro cuyo barcode reciba
     *
     * @param idLibro Recibe el barcode del libro
     */
    public void ActualizaStock(String idLibro) {
        String sqlSelect = "SELECT Stock FROM Libro WHERE idLibro='" + idLibro + "';";
        int Stock = 0;
        try {
            Statement st = cn.getConnection().createStatement();
            ResultSet rs = st.executeQuery(sqlSelect);

            while (rs.next()) {
                Stock = rs.getInt(1);
            }
            Stock = Stock + 1;

        } catch (SQLException e) {
            System.out.println("Error al leer el Stock del libro: " + e.getMessage());
        }

        String sqlUpd = "UPDATE Libro SET Stock=? WHERE idLibro='" + idLibro + "';";

        try {
            PreparedStatement pst = cn.getConnection().prepareStatement(sqlUpd);
            pst.setInt(1, Stock);
            pst.executeUpdate();
            pst.close();

        } catch (SQLException ex) {
            System.out.println("Error al actualizar el Stock:" + ex.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Deudor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Deudor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Deudor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Deudor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Deudor().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(Deudor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton jBCambiar;
    private javax.swing.JButton jBDevolver;
    private javax.swing.JButton jBNoAdeudo;
    private javax.swing.JButton jBNoAdeudo1;
    private javax.swing.JButton jBReimprimir;
    private javax.swing.JLabel jLAutor;
    private javax.swing.JLabel jLFechaS;
    private javax.swing.JLabel jLMatricula;
    private javax.swing.JLabel jLNombre;
    private javax.swing.JLabel jLPE;
    private javax.swing.JLabel jLTitulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMSalir;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRBAtrasados;
    private javax.swing.JRadioButton jRBTodos;
    private javax.swing.JRadioButton jRBVigentes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFecha;
    private javax.swing.JTable jTable1;
    private org.edisoncor.gui.panel.PanelCurves panelCurves1;
    private org.edisoncor.gui.textField.TextFieldRectBackground tFLibro;
    private org.edisoncor.gui.textField.TextFieldRectBackground tFMatricula;
    // End of variables declaration//GEN-END:variables

    //Limpiar jLabels
    private void Limpiar() {
        jLMatricula.setText("");
        jLNombre.setText("");
        this.jLPE.setText("");
        this.jTFecha.setText("");
        this.jLTitulo.setText("");
        this.jLAutor.setText("");
        this.jLFechaS.setText("");
        tFLibro.setText("");
        tFMatricula.setText("");
        
        jBDevolver.setEnabled(false);
        jBReimprimir.setEnabled(false);
        jBCambiar.setEnabled(false);
        jTFecha.setEnabled(false);
        tFLibro.requestFocus();
    }

    /**
     * Muestra por defecto todos los libros adeudados y sus respectivos deudores
     *
     * @param sql Recibe la consulta que mostrará en la jTable
     */
    private void mostrar(String sql) {
        DefaultTableModel Modelo = new DefaultTableModel();
        Modelo.addColumn("ID");
        Modelo.addColumn("MATRICULA");
        Modelo.addColumn("NOMBRE (S)");
        Modelo.addColumn("PE");
        Modelo.addColumn("TEL");
        Modelo.addColumn("TITULO");
        Modelo.addColumn("AUTOR");
        Modelo.addColumn("F. SALIDA");
        Modelo.addColumn("F. DEVOLUCION");
        Modelo.addColumn("BARCODE");
        jTable1.setModel(Modelo);
        //Tamaño de columnas en la jTable
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(10);
        
        if (sql.equals("")) {
            sql = "SELECT "
                    + "Prestamos.idPrestamos, Personas.Matricula,Personas.Nombres,Personas.Apellidos,"
                    + "Personas.Carrera,DetallePersona.Telefono,Libro.Titulo,Libro.Autor,Prestamos.FechaS,Prestamos.FechaD,Libro.idLibro"
                    + " FROM "
                    + "Prestamos INNER JOIN Personas ON Prestamos.idUsuario=Personas.idPersonas INNER JOIN DetallePersona ON DetallePersona.idPersonas=Personas.idPersonas "
                    + "INNER JOIN Libro ON Prestamos.idLibro=Libro.idLibro"
                    + " WHERE "
                    + "Prestamos.estado='Prestado' ORDER BY Prestamos.FechaD;";
        }

        String[] datos = new String[10];
        try {
            Statement st = cn.getConnection().createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3) + " " + rs.getString(4);
                datos[3] = rs.getString(5);
                datos[4] = rs.getString(6);
                datos[5] = rs.getString(7);
                datos[6] = rs.getString(8);
                datos[7] = rs.getString(9);
                datos[8] = rs.getString(10);
                datos[9] = rs.getString(11);
                Modelo.addRow(datos);
            }
            jTable1.setModel(Modelo);
        } catch (SQLException ex) {
            System.out.println("Error al hacer consulta: " + ex.getMessage());
        }
    }

    /**
     * Busca el libro desde el campo de texto ayudado por el lector de codigo de
     * barras o el teclado a diferencia de la busqueda like, en este método se
     * busca el codigo de barras correcto, es decir completo Utilizado en el
     * boton de buscar libro y al dar enter en el mismo TextField de codigo de
     * barras del libro
     */
    private void BuscarLibro(String CodigoBarras) {
        String sql = "SELECT "
                + "Prestamos.idPrestamos, Personas.Matricula,Personas.Nombres,Personas.Apellidos,"
                + "Personas.Carrera,DetallePersona.Telefono,Libro.Titulo,Libro.Autor,Prestamos.FechaS,Prestamos.FechaD,Libro.idLibro"
                + " FROM "
                + "Prestamos INNER JOIN Personas ON Prestamos.idUsuario=Personas.idPersonas INNER JOIN DetallePersona ON DetallePersona.idPersonas=Personas.idPersonas "
                + "INNER JOIN Libro ON Prestamos.idLibro=Libro.idLibro"
                + " WHERE "
                + "Prestamos.estado='Prestado' && Prestamos.idLibro = '" + CodigoBarras + "';";
        mostrar(sql);
    }
}
